<UserControl x:Class="BiomasaEUPT.Vistas.GestionUsuarios.TablaUsuarios"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BiomasaEUPT.Vistas.GestionUsuarios"
             xmlns:BiomasaEUPT="clr-namespace:BiomasaEUPT"
             xmlns:const="clr-namespace:BiomasaEUPT.Modelos"
             xmlns:Tablas="clr-namespace:BiomasaEUPT.Modelos.Tablas"
             xmlns:validadores="clr-namespace:BiomasaEUPT.Modelos.Validadores"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <CollectionViewSource x:Key="usuariosViewSource" d:DesignSource="{d:DesignInstance {x:Type Tablas:Usuario}, CreateList=True}"/>
        <CollectionViewSource x:Key="tiposUsuariosViewSource" d:DesignSource="{d:DesignInstance {x:Type Tablas:TipoUsuario}, CreateList=True}"/>
    </UserControl.Resources>
    <Grid>
        <GroupBox materialDesign:ColorZoneAssist.Mode="PrimaryMid" Header="Usuarios">
            <Grid Margin="0 0 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <DataGrid Grid.Row="0" Grid.RowSpan="2" x:Name="dgUsuarios" DataContext="{StaticResource usuariosViewSource}"
                          RowDetailsVisibilityMode="VisibleWhenSelected" ItemsSource="{Binding}" CanUserAddRows="False"
                          EnableRowVirtualization="True" AutoGenerateColumns="False" HeadersVisibility="All">
                        <DataGrid.RowValidationErrorTemplate>
                            <ControlTemplate>
                                <Grid Margin="2,-2"
                                      ToolTip="{Binding RelativeSource={RelativeSource
                                      FindAncestor, AncestorType={x:Type DataGridRow}},
                                      Path=(Validation.Errors)[0].ErrorContent}">
                                    <Ellipse StrokeThickness="0" Fill="Red" Width="20" Height="20"/>
                                    <TextBlock Text="!" FontSize="18" 
                                               FontWeight="Bold" Foreground="White" 
                                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                                <!--Label Foreground="Red"
                                       ToolTip="{Binding RelativeSource={RelativeSource
                                      FindAncestor, AncestorType={x:Type DataGridRow}},
                                      Path=(Validation.Errors)[0].ErrorContent}">
                                    <materialDesign:PackIcon Kind="Exclamation" Height="21" Width="21" />
                                </-->
                            </ControlTemplate>
                        </DataGrid.RowValidationErrorTemplate>

                        <DataGrid.RowValidationRules>
                            <!--validadores:UsuarioValidationRule ValidationStep="UpdatedValue"/-->
                        </DataGrid.RowValidationRules>

                        <DataGrid.Columns>
                            <materialDesign:MaterialDataGridTextColumn x:Name="nombreColumna" Width="SizeToHeader" Header="Nombre"
                                                                   EditingElementStyle="{DynamicResource MaterialDesignDataGridTextColumnEditingStyle}" MaxLength="{x:Static const:Constantes.LONG_MAX_NOMBRE_USUARIO}">
                                <materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="Nombre" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="nombre" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="nombre" Min="{x:Static const:Constantes.LONG_MIN_NOMBRE_USUARIO}" Max="{x:Static const:Constantes.LONG_MAX_NOMBRE_USUARIO}" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="{x:Static const:Constantes.REGEX_NOMBRE_USUARIO}" NombreCampo="nombre" MensajeFormato="sólo letras minúsculas" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding>
                            </materialDesign:MaterialDataGridTextColumn>

                            <DataGridTemplateColumn Header="Contraseña">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Setters>
                                                        <Setter Property="Text" Value="●●●●●●" />
                                                    </Style.Setters>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Nombre}" Value="{x:Null}">
                                                            <Setter Property="Text" Value="" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <PasswordBox Name="pbContrasena" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <materialDesign:MaterialDataGridTextColumn x:Name="emailColumna" Width="100" Header="Email"
                                                                   EditingElementStyle="{DynamicResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                                                                   MaxLength="{x:Static const:Constantes.LONG_MAX_EMAIL}">
                                <materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="Email" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="email" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="email" Min="{x:Static const:Constantes.LONG_MIN_EMAIL}" Max="{x:Static const:Constantes.LONG_MAX_EMAIL}" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="{x:Static const:Constantes.REGEX_EMAIL}" ValidatesOnTargetUpdated="True" />
                                            <validadores:UnicoValidationRule Coleccion="{StaticResource usuariosViewSource}" Tipo="usuarios" Atributo="email"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding>
                            </materialDesign:MaterialDataGridTextColumn>

                            <DataGridComboBoxColumn x:Name="tipos_usuariosColumna" Header="Tipo"
                                                    ItemsSource="{Binding Source={StaticResource tiposUsuariosViewSource}}"
                                                    SelectedValuePath="TipoUsuarioId" 
                                                    DisplayMemberPath="Nombre" SelectedValueBinding="{Binding TipoId, UpdateSourceTrigger=PropertyChanged}"
                                                    EditingElementStyle="{DynamicResource MaterialDesignComboBox}" />

                            <DataGridCheckBoxColumn x:Name="baneadoColumna" Width="SizeToHeader" Header="Baneado" Binding="{Binding Baneado, UpdateSourceTrigger=PropertyChanged}"
                                                    ElementStyle="{DynamicResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                    EditingElementStyle="{DynamicResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                                <!--DataGridCheckBoxColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="ToolTip" Value="{Binding FechaBaja, ConverterCulture=es-ES}" />
                                </Style>
                            </DataGridCheckBoxColumn.CellStyle-->
                            </DataGridCheckBoxColumn>

                            <!--materialDesign:MaterialDataGridComboBoxColumn x:Name="tipoColumn" Header="Tipo"
                    ItemsSource="{Binding Source={StaticResource tipos_usuariosViewSource}}" SelectedValuePath="id_tipo_usuario" 
                    DisplayMemberPath="nombre" SelectedValueBinding="{Binding tipo_id}"/>
                <materialDesign:MaterialDataGridComboBoxColumn Header="Tipo" 
                    SelectedValueBinding="{Binding tipo_id}" SelectedValuePath="id_tipo_usuario" 
                    DisplayMemberPath="nombre" ItemsSourceBinding="{Binding Source={StaticResource tipos_usuariosViewSource}}" />
                <DataGridTemplateColumn x:Name="fecha_altaColumn" Width="SizeToHeader" Header="fecha alta">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source={StaticResource tipos_usuariosViewSource}}" SelectedValuePath="id_tipo_usuario"
                                      DisplayMemberPath="nombre" SelectedValue="{Binding tipo_id}"></ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <DataGridTemplateColumn Header="eee" MinWidth="140">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=tipo_id, Mode=OneWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source={StaticResource tipos_usuariosViewSource}}"
                                      SelectedValuePath="id_tipo_usuario" DisplayMemberPath="nombre" SelectedValue="{Binding Path=tipo_id, Mode=OneWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn-->

                            <!--DataGridTemplateColumn x:Name="fecha_altaColumn" Width="SizeToHeader" Header="fecha alta">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding fecha_alta, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn x:Name="fecha_bajaColumn" Width="SizeToHeader" Header="fecha baja">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding fecha_baja, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn x:Name="fecha_contrasenaColumn" Width="SizeToHeader" Header="fecha contrasena">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding fecha_contrasena, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn-->
                        </DataGrid.Columns>
                    </DataGrid>
                    <materialDesign:PopupBox Grid.Row="1" Style="{DynamicResource MaterialDesignMultiFloatingActionPopupBox}"
                                 HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                 PlacementMode="RightAndAlignMiddles"
                                 UnfurlOrientation="Horizontal"
                                 ToolTip="Gestionar usuarios"
                                 Margin="15 15 15 30" Width="40" Height="40">
                        <StackPanel Orientation="Horizontal">
                            <Button ToolTip="Borrar el usuario seleccionado" Command="{Binding BorrarComando}" IsEnabled="{Binding CanBorrar}">
                                <materialDesign:PackIcon Kind="Delete" Height="20" Width="20" />
                            </Button>
                            <Button x:Name="bAnadirUsuario" ToolTip="Añadir usuario">
                                <materialDesign:PackIcon Kind="AccountPlus" Height="20" Width="20" />
                            </Button>
                            <Button x:Name="bRefrescar" ToolTip="Refrescar tabla">
                                <materialDesign:PackIcon Kind="Refresh" Height="20" Width="20" />
                            </Button>
                        </StackPanel>
                    </materialDesign:PopupBox>
                </Grid>
                <TextBox x:Name="tbBuscar" Grid.Row="1" Grid.ColumnSpan="2" FontFamily="Roboto" FontSize="12"
                         materialDesign:HintAssist.Hint=" Buscar..." Background="{DynamicResource MaterialDesignPaper}"
                         TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                         TextChanged="tbBuscar_TextChanged"/>
                <materialDesign:PopupBox Grid.Row="1" Grid.Column="1" StaysOpen="True" HorizontalAlignment="Right">
                    <materialDesign:PopupBox.ToggleContent>
                        <materialDesign:PackIcon Kind="Settings" Width="20" Height="20" />
                    </materialDesign:PopupBox.ToggleContent>
                    <Grid Width="150" Margin="8,8,8,8">
                        <Grid.Resources>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                <Setter Property="Margin" Value="8,8,10,8"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Grid.Row="0" Style="{DynamicResource MaterialDesignTitleTextBlock}" Margin="8,8,8,16">Ajustes filtro</TextBlock>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="Nombre" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="Email" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="3" Text="Tipo" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="4" Text="Baneado" Margin="8,8,8,8"/>
                        <CheckBox x:Name="cbNombre" Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom" IsChecked="True"/>
                        <CheckBox x:Name="cbEmail" Grid.Column="1" Grid.Row="2" VerticalAlignment="Bottom" IsChecked="True"/>
                        <CheckBox x:Name="cbTipo" Grid.Column="1" Grid.Row="3" VerticalAlignment="Bottom" IsChecked="True"/>
                        <CheckBox x:Name="cbBaneado" Grid.Column="1" Grid.Row="4" VerticalAlignment="Bottom" IsChecked="False"/>
                    </Grid>

                </materialDesign:PopupBox>
            </Grid>

        </GroupBox>
    </Grid>
</UserControl>
