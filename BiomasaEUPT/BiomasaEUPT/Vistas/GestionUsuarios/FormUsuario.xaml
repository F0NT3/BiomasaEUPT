<UserControl x:Class="BiomasaEUPT.Vistas.GestionUsuarios.FormUsuario"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BiomasaEUPT.Vistas.GestionUsuarios"
             xmlns:const="clr-namespace:BiomasaEUPT.Modelos"
             xmlns:Tablas="clr-namespace:BiomasaEUPT.Modelos.Tablas"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:validadores="clr-namespace:BiomasaEUPT.Modelos.Validadores"
             xmlns:domain="clr-namespace:BiomasaEUPT.Domain"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             Height="300" Width="420">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Diccionarios/DiccionarioForm.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <validadores:BindingProxy x:Key="ContrasenaProxy" Data="{Binding Contrasena, Mode=TwoWay}"/>
            <validadores:BindingProxy x:Key="ContrasenaConfirmacionProxy" Data="{Binding ContrasenaConfirmacion, Mode=TwoWay}"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <GroupBox x:Name="gbTitulo" materialDesign:ColorZoneAssist.Mode="PrimaryMid" Header="{Binding FormTitulo}">
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Row="0" Grid.Column="0" x:Name="tbNombre" materialDesign:HintAssist.Hint="Nombre" MaxLength="{x:Static const:Constantes.LONG_MAX_NOMBRE_USUARIO}">
                    <TextBox.Text>
                        <Binding Path="Nombre" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validadores:RequeridoValidationRule NombreCampo="nombre" ValidatesOnTargetUpdated="True" />
                                <validadores:LongitudValidationRule NombreCampo="nombre" Min="{x:Static const:Constantes.LONG_MIN_NOMBRE_USUARIO}" Max="{x:Static const:Constantes.LONG_MAX_NOMBRE_USUARIO}" ValidatesOnTargetUpdated="True" />
                                <validadores:RegexValidationRule NombreCampo="nombre" ExpReg="{x:Static const:Constantes.REGEX_NOMBRE_USUARIO}" MensajeFormato="(sólo letras minúsculas)" ValidatesOnTargetUpdated="True" />
                                <validadores:UnicoValidationRule x:Name="vNombreUnico" Online="True" Tipo="Usuario" Atributo="Nombre" ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox Grid.Row="0" Grid.Column="1" x:Name="tbEmail" materialDesign:HintAssist.Hint="Email" MaxLength="{x:Static const:Constantes.LONG_MAX_EMAIL}">
                    <TextBox.Text>
                        <Binding Path="Email" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validadores:RequeridoValidationRule NombreCampo="email" ValidatesOnTargetUpdated="True" />
                                <validadores:LongitudValidationRule NombreCampo="email" Min="{x:Static const:Constantes.LONG_MIN_EMAIL}" Max="{x:Static const:Constantes.LONG_MAX_EMAIL}" ValidatesOnTargetUpdated="True" />
                                <validadores:RegexValidationRule NombreCampo="email" ExpReg="{x:Static const:Constantes.REGEX_EMAIL}" ValidatesOnTargetUpdated="True" />
                                <validadores:UnicoValidationRule x:Name="vEmailUnico" Online="True" Tipo="Usuario" Atributo="Email" ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <ComboBox Grid.Row="1" Grid.Column="0" x:Name="cbTiposUsuarios" materialDesign:HintAssist.Hint="Tipo"
                          SelectedItem="{Binding TipoUsuarioSeleccionado, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          ItemsSource="{Binding TiposUsuarios}"
                          DisplayMemberPath="Nombre"
                          SelectedValuePath="TipoUsuarioId">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <CheckBox Grid.Row="1" Grid.Column="1" x:Name="cbBaneado" Content="Baneado" IsChecked="{Binding Baneado, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                <PasswordBox Grid.Row="2" Grid.Column="0" x:Name="pbContrasena" HorizontalAlignment="Left"
                     materialDesign:HintAssist.Hint="Contraseña"
                     domain:PasswordBoxAttachedProperties.EncryptedPassword="{Binding Contrasena, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     PasswordChanged="pbContrasena_PasswordChanged" Margin="10" Width="180"/>

                <PasswordBox Grid.Row="2" Grid.Column="3" x:Name="pbContrasenaConfirmacion" HorizontalAlignment="Left"
                     materialDesign:HintAssist.Hint="Confirmar Contraseña"
                     domain:PasswordBoxAttachedProperties.EncryptedPassword="{Binding ContrasenaConfirmacion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     PasswordChanged="pbContrasena_PasswordChanged" Margin="10" Width="180"/>

                <WrapPanel Grid.Row="3" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="0,15,0,0">
                    <Button x:Name="bNuevoUsuario" IsDefault="True" Margin="0 8 8 0" Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=tbNombre, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbEmail, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=pbContrasena, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=pbContrasenaConfirmacion, Path=(Validation.HasError)}" Value="False" />
                                            <!--Condition Binding="{Binding ContrasenaIguales}" Value="True" /-->
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </Button.CommandParameter>
                        _ACEPTAR
                    </Button>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}"
                    IsCancel="True" Margin="0 8 8 0"
                    Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.CommandParameter>
                            <system:Boolean>False</system:Boolean>
                        </Button.CommandParameter>
                        _CANCELAR
                    </Button>
                </WrapPanel>
            </Grid>
        </ScrollViewer>
    </GroupBox>
</UserControl>
