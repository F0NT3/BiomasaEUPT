<UserControl x:Class="BiomasaEUPT.Vistas.GestionEnvasados.TablaProductosEnvasados"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BiomasaEUPT.Vistas.GestionEnvasados"
             xmlns:raiz="clr-namespace:BiomasaEUPT.Vistas"
             xmlns:BiomasaEUPT="clr-namespace:BiomasaEUPT"
             xmlns:Tablas="clr-namespace:BiomasaEUPT.Modelos.Tablas"
             xmlns:conv="clr-namespace:BiomasaEUPT.Domain.Converters"
             xmlns:validadores="clr-namespace:BiomasaEUPT.Modelos.Validadores"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="700" >
    <UserControl.Resources>
        <ResourceDictionary>
            <conv:CadenaVaciaConverter x:Key="CadenaVaciaConverter"/>
            <conv:CadenaSplitConverter x:Key="CadenaSplitConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <GroupBox materialDesign:ColorZoneAssist.Mode="PrimaryMid" Header="Productos Envasados">

            <Grid Margin="0 0 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <DataGrid Grid.Row="0" Grid.RowSpan="2" x:Name="dgProductosEnvasados"
                              AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding ProductosEnvasadosView}"
                              RowDetailsVisibilityMode="VisibleWhenSelected" CanUserAddRows="False" IsReadOnly="True"
                              CanUserDeleteRows="False" SelectedItem="{Binding ProductoEnvasadoSeleccionado, Mode=TwoWay}" IsSynchronizedWithCurrentItem="True"
                              ColumnHeaderStyle="{DynamicResource MaterialDesignDataGridColumnHeader}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding DGProductosEnvasados_SelectionChangedComando}"
                                    CommandParameter="{Binding Path=SelectedItems, ElementName=dgProductosEnvasados}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.InputBindings>
                            <KeyBinding Gesture="Delete" Key="Delete"
                                        Command="{Binding BorrarProductoEnvasadoComando}"
                                        CommandParameter="{Binding Path=SelectedItems, ElementName=dgProductosEnvasados, Mode=OneWay}"/>
                            <MouseBinding MouseAction="LeftDoubleClick"
                                          Command="{Binding ModificarProductoEnvasadoComando}"/>
                        </DataGrid.InputBindings>
                        <DataGrid.Columns>
                            <materialDesign:MaterialDataGridTextColumn x:Name="tipoColumna" Header="Tipo"
                                                                       Binding="{Binding TipoProductoEnvasado.Nombre, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                            <materialDesign:MaterialDataGridTextColumn x:Name="grupoColumna" Header="Grupo"
                                                                       Binding="{Binding TipoProductoEnvasado.GrupoProductoEnvasado.Nombre, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                            <DataGridTemplateColumn x:Name="volumenUnidadesColumn" Header="Volumen/Unidades">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Text">
                                                        <Setter.Value>
                                                            <MultiBinding StringFormat="{}{0} m³" >
                                                                <Binding Path="Volumen" />
                                                            </MultiBinding>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding TipoProductoEnvasado.MedidoEnUnidades}" Value="True">
                                                            <Setter Property="Text">
                                                                <Setter.Value>
                                                                    <MultiBinding StringFormat="{}{0} ud." >
                                                                        <Binding Path="Unidades" />
                                                                    </MultiBinding>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <materialDesign:MaterialDataGridTextColumn x:Name="codigoColumna" Header="Código" Width="SizeToHeader"
                                                                       Binding="{Binding Codigo, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                            <materialDesign:MaterialDataGridTextColumn x:Name="pickingColumna" Header="Tipo"
                                                                       Binding="{Binding Picking.Nombre, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                            <!--DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="bCodigo" Padding="0" BorderThickness="0" Height="17" Width="17"
                                                Background="Transparent" Foreground="{DynamicResource MaterialDesignBody}"
                                                ToolTip="Obtener PDF con los códigos" Click="bCodigo_Click">
                                            <materialDesign:PackIcon Kind="Barcode" Width="17" Height="17"/>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </>

                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="bPdfMateria" Padding="0" BorderThickness="0" Height="17" Width="17"
                                                Background="Transparent" Foreground="{DynamicResource MaterialDesignBody}"
                                                ToolTip="Generar informe en PDF" Click="bPdfProducto_Click">
                                            <materialDesign:PackIcon Kind="FilePdf" Width="17" Height="17"/>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn-->
                        </DataGrid.Columns>

                    </DataGrid>

                    <materialDesign:PopupBox Grid.Row="1" Style="{DynamicResource MaterialDesignMultiFloatingActionPopupBox}"
                                 HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                 PlacementMode="RightAndAlignMiddles"
                                 UnfurlOrientation="Horizontal"
                                 ToolTip="Gestionar productos envasados"
                                 Margin="15 15 15 30" Width="40" Height="40">
                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="bAnadirProductoEnvasado" ToolTip="Añadir producto envasado"
                                    Command="{Binding AnadirProductoEnvasadoComando}">
                                <materialDesign:PackIcon Kind="AccountPlus" Height="20" Width="20" />
                            </Button>
                            <Button ToolTip="Borrar el producto envasado seleccionado"
                                    Command="{Binding BorrarProductoEnvasadoComando}">
                                <materialDesign:PackIcon Kind="Delete" Height="20" Width="20" />
                            </Button>
                            <Button ToolTip="Modificar el producto envasado seleccionado"
                                    Command="{Binding ModificarProductoEnvasadoComando}">
                                <materialDesign:PackIcon Kind="Pencil" Height="20" Width="20" />
                            </Button>
                            <Button x:Name="bRefrescar" ToolTip="Refrescar productos envasados"
                                     Command="{Binding RefrescarProductosEnvasadosComando}">
                                <materialDesign:PackIcon Kind="Refresh" Height="20" Width="20" />
                            </Button>
                        </StackPanel>
                    </materialDesign:PopupBox>
                </Grid>

                <StackPanel Grid.Column="1" 
                            HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Stretch"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}">
                    <Expander ExpandDirection="Left">
                        <Expander.Header>
                            <TextBlock Text="Productos Terminados" RenderTransformOrigin=".5,.5" FontSize="16">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <WrapPanel x:Name="wpProductosTerminados" Margin="15 25 0 0"
                                   Orientation="Horizontal" MinHeight="40" Width="150">
                            <ItemsControl ItemsSource="{Binding ProductoEnvasadoSeleccionado.ProductosEnvasadosComposiciones, UpdateSourceTrigger=PropertyChanged}" >
                                <ItemsControl.Style>
                                    <Style TargetType="ItemsControl">
                                        <Style.Triggers>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <TextBlock FontSize="14" Text="S/D"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ItemsControl.Style>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <materialDesign:Chip Margin="5" Cursor="Arrow">
                                            <materialDesign:Chip.Content>
                                                <StackPanel>
                                                    <TextBlock FontSize="14" FontWeight="Bold" Text="{Binding HistorialHuecoAlmacenaje.MateriaPrima.TipoMateriaPrima.Nombre}"/>
                                                    <TextBlock FontSize="14" FontStyle="Italic">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Text">
                                                                    <Setter.Value>
                                                                        <MultiBinding StringFormat="{}{0} de {1} m³" >
                                                                            <Binding Path="Volumen" />
                                                                            <Binding Path="HistorialHuecoAlmacenaje.HuecoAlmacenaje.VolumenTotal" />
                                                                        </MultiBinding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Volumen}" Value="{x:Null}">
                                                                        <Setter Property="Text">
                                                                            <Setter.Value>
                                                                                <MultiBinding StringFormat="{}{0} de {1} ud." >
                                                                                    <Binding Path="Unidades" />
                                                                                    <Binding Path="HistorialHuecoAlmacenaje.HuecoAlmacenaje.UnidadesTotales" />
                                                                                </MultiBinding>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </StackPanel>
                                            </materialDesign:Chip.Content>
                                            <materialDesign:Chip.Icon>
                                                <TextBlock FontSize="15" Text="{Binding HistorialHuecoAlmacenaje.HuecoAlmcenaje.Nombre,UpdateSourceTrigger=PropertyChanged,
                                                                                Converter={StaticResource CadenaSplitConverter}, ConverterParameter='3|3'}"></TextBlock>
                                            </materialDesign:Chip.Icon>
                                        </materialDesign:Chip>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </WrapPanel>
                    </Expander>
                    
                    <Expander ExpandDirection="Left">
                        <Expander.Header>
                            <TextBlock Text="Observaciones" RenderTransformOrigin=".5,.5" FontSize="16">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>

                        <TextBlock x:Name="tbObservaciones" Text="{Binding ProductoEnvasadoSeleccionado.Observaciones, UpdateSourceTrigger=PropertyChanged,
                                                                           Converter={StaticResource CadenaVaciaConverter}, ConverterParameter='S/D'}"
                                   FontSize="16" Width="150" Margin="15 25 0 0" MaxHeight="350" TextWrapping="Wrap"
                                   Foreground="{DynamicResource MaterialDesignBody}"/>
                    </Expander>
                </StackPanel>

                <TextBox x:Name="tbBuscar" Grid.Row="1" Grid.ColumnSpan="2" FontFamily="Roboto" FontSize="12"
                         materialDesign:HintAssist.Hint=" Buscar..." Background="{DynamicResource MaterialDesignPaper}"
                         TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                         Text="{Binding TextoFiltroProductosEnvasados, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                <materialDesign:PopupBox Grid.Row="1" Grid.Column="1" StaysOpen="True" HorizontalAlignment="Right">
                    <materialDesign:PopupBox.ToggleContent>
                        <materialDesign:PackIcon Kind="Settings" Width="20" Height="20" />
                    </materialDesign:PopupBox.ToggleContent>
                    <Grid Width="150" Margin="8,8,8,8">
                        <Grid.Resources>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                <Setter Property="Margin" Value="8,8,10,8"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Grid.Row="0" Style="{DynamicResource MaterialDesignTitleTextBlock}" Margin="8,8,8,16">Ajustes filtro</TextBlock>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="Tipo" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="Grupo" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="3" Text="Vol./Unidades" Margin="8,8,8,8"/>
                        <CheckBox x:Name="cbTipo" Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom"
                                  IsChecked="{Binding TipoProductoEnvasadoSeleccionado}" Command="{Binding FiltrarProductosEnvasadosComando}"/>
                        <CheckBox x:Name="cbGrupo" Grid.Column="1" Grid.Row="2" VerticalAlignment="Bottom"
                                  IsChecked="{Binding GrupoProductoEnvasadoSeleccionado}" Command="{Binding FiltrarProductosEnvasadosComando}"/>
                        <CheckBox x:Name="cbVolUni" Grid.Column="1" Grid.Row="4" VerticalAlignment="Bottom"
                                  IsChecked="{Binding VolUniProductoEnvasadoSeleccionado}" Command="{Binding FiltrarProductosEnvasadosComando}"/>
                    </Grid>

                </materialDesign:PopupBox>
            </Grid>

        </GroupBox>
    </Grid>
</UserControl>
