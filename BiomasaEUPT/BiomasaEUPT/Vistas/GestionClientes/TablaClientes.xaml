<UserControl x:Class="BiomasaEUPT.Vistas.GestionClientes.TablaClientes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BiomasaEUPT.Vistas.GestionClientes"
             xmlns:BiomasaEUPT="clr-namespace:BiomasaEUPT"
             xmlns:domain="clr-namespace:BiomasaEUPT.Domain"
             xmlns:validadores="clr-namespace:BiomasaEUPT.Modelos.Validadores"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800" >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <!-- throw in some extra colour for our floating action button -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Green.Named.Primary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <CollectionViewSource x:Key="clientesViewSource" d:DesignSource="{d:DesignInstance {x:Type BiomasaEUPT:clientes}, CreateList=True}"/>
            <CollectionViewSource x:Key="tipos_clientesViewSource" d:DesignSource="{d:DesignInstance {x:Type BiomasaEUPT:tipos_clientes}, CreateList=True}"/>
            <CollectionViewSource x:Key="grupos_clientesViewSource" d:DesignSource="{d:DesignInstance {x:Type BiomasaEUPT:grupos_clientes}, CreateList=True}"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <domain:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInvertido" True="Collapsed" False="Visible" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <GroupBox Style="{DynamicResource MaterialDesignCardGroupBox}" Margin="0,0,0,0" materialDesign:ColorZoneAssist.Mode="PrimaryMid" FontSize="20">
            <GroupBox.Header>
                <TextBlock Text="Clientes" FontFamily="Roboto" HorizontalAlignment="Center" Foreground="White"/>
            </GroupBox.Header>

            <Grid Margin="0 0 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <DataGrid DataContext="{StaticResource clientesViewSource}" Grid.Row="0" Grid.RowSpan="2" x:Name="dgClientes" AutoGenerateColumns="False" EnableRowVirtualization="True"
                          ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <materialDesign:MaterialDataGridTextColumn x:Name="razon_socialColumn" Header="Razón social" Width="SizeToHeader" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                                <materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="razon_social" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="razón social" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="razón social" Min="5" Max="100" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="^(?!\s)(?!.*\s$)[\p{L}0-9\s'~?!\.,@]+$" Mensaje="El campo razón social no tiene formato válido." ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding>
                            </materialDesign:MaterialDataGridTextColumn>
                            <materialDesign:MaterialDataGridTextColumn x:Name="nifColumn" Header="nif" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                                <materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="nif" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="NIF" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="NIF" Min="9" Max="9" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="^([A-Z]-\d{7})|(\d{7}-[A-Z])$" Mensaje="El campo NIF no tiene un formato válido (L-NNNNNNN o NNNNNNN-L)" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding>
                            </materialDesign:MaterialDataGridTextColumn>
                            <materialDesign:MaterialDataGridTextColumn x:Name="emailColumn" Header="Email" Width="SizeToHeader" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                                <materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="email" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="email" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="email" Min="10" Max="254" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="^[a-zA-Z][\w\.-]*[a-zA-Z0-9]@[a-zA-Z0-9][\w\.-]*[a-zA-Z0-9]\.[a-zA-Z][a-zA-Z\.]*[a-zA-Z]$" Mensaje="El campo email no tiene formato válido." ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding>
                            </materialDesign:MaterialDataGridTextColumn>
                            <DataGridComboBoxColumn x:Name="tipos_clientesColumn" Header="Tipo"
                                                ItemsSource="{Binding Source={StaticResource tipos_clientesViewSource}}"
                                                SelectedValuePath="id_tipo_cliente" 
                                                DisplayMemberPath="nombre" SelectedValueBinding="{Binding tipo_id, UpdateSourceTrigger=PropertyChanged}"
                                                EditingElementStyle="{StaticResource MaterialDesignComboBox}" />
                            <DataGridComboBoxColumn x:Name="grupos_clientesColumn" Header="Grupo"
                                                ItemsSource="{Binding Source={StaticResource grupos_clientesViewSource}}"
                                                SelectedValuePath="id_grupo_cliente" 
                                                DisplayMemberPath="nombre" SelectedValueBinding="{Binding grupo_id, UpdateSourceTrigger=PropertyChanged}"
                                                EditingElementStyle="{StaticResource MaterialDesignComboBox}" />
                            <materialDesign:MaterialDataGridTextColumn x:Name="calleColumn" Header="calle" Width="180" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                                <materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="calle" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="calle" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="calle" Min="20" Max="100" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="^(?!\s)(?!.*\s$)[\p{L}0-9\s'~?!\.,\/]+$" Mensaje="El campo calle no tiene formato válido." ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding>
                            </materialDesign:MaterialDataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <materialDesign:PopupBox Grid.Row="1" Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                 HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                 PlacementMode="RightAndAlignMiddles"
                                 UnfurlOrientation="Horizontal"
                                 ToolTip="Gestionar clientes"
                                 Margin="15 15 15 30" Width="40" Height="40">
                        <StackPanel Orientation="Horizontal">
                            <Button ToolTip="Borrar el cliente seleccionado" Command="{Binding BorrarComando}" IsEnabled="{Binding CanBorrar}">
                                <materialDesign:PackIcon Kind="Delete" Height="20" Width="20" />
                            </Button>
                            <Button ToolTip="Confirmar cambios" Command="{Binding ConfirmarCambiosComando}" IsEnabled="{Binding CanConfirmarCambios}">
                                <materialDesign:PackIcon Kind="Check" Height="20" Width="20" />
                            </Button>

                        </StackPanel>
                    </materialDesign:PopupBox>
                </Grid>

                <StackPanel DataContext="{StaticResource clientesViewSource}" Grid.Column="1" HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Stretch">
                    <Expander ExpandDirection="Left">
                        <Expander.Header>
                            <TextBlock Text="Observaciones" RenderTransformOrigin=".5,.5" FontSize="16">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Orientation="Vertical" Width="150" Margin="8,24,8,24"
                                    TextBlock.Foreground="{DynamicResource MaterialDesignBody}">
                            <ToggleButton x:Name="tbEditarObservaciones" Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                          HorizontalAlignment="Right" Margin="8 0 0 0" ToolTip="Editar">
                                <materialDesign:PackIcon Kind="Pin" RenderTransformOrigin=".5,.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform Angle="45" />
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <materialDesign:PackIcon Kind="Pin"/>
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                            <TextBlock x:Name="tbObservaciones" Text="{Binding observaciones, UpdateSourceTrigger=PropertyChanged}"
                                       Visibility="{Binding IsChecked, ElementName=tbEditarObservaciones, Converter={StaticResource BooleanToVisibilityConverterInvertido}}" FontSize="16"
                                       MaxHeight="350" TextWrapping="Wrap"/>
                            <TextBox x:Name="tboxObservaciones" Text="{Binding observaciones, UpdateSourceTrigger=PropertyChanged}"
                                     Visibility="{Binding IsChecked, ElementName=tbEditarObservaciones, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     FontSize="16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"
                                     MaxHeight="350" TextWrapping="Wrap"/>
                            <!--RichTextBox x:Name="rtbObservaciones" MaxWidth="180" MinHeight="300" VerticalAlignment="Top"
                                         Visibility="{Binding IsChecked, ElementName=tbEditarObservaciones, Converter={StaticResource BooleanToVisibilityConverter}}" FontSize="16"
                                         DataObject.Pasting="rtbObservaciones_Pasting">
                                <FlowDocument>
                                    <Paragraph>
                                        <Run Text="{Binding observaciones, UpdateSourceTrigger=PropertyChanged}" />
                                    </Paragraph>
                                </FlowDocument>
                            </RichTextBox>
                            <Button x:Name="bObservaciones" Margin="0 10 0 0" Content="Cambiar" VerticalAlignment="Bottom" IsEnabled="False"/-->
                        </StackPanel>
                    </Expander>
                </StackPanel>

                <TextBox x:Name="tbBuscar" Grid.Row="1" Grid.ColumnSpan="2" FontFamily="Roboto" FontSize="12"
                         materialDesign:HintAssist.Hint=" Buscar..." Background="#F0F0F0"
                         TextChanged="tbBuscar_TextChanged"/>

                <materialDesign:PopupBox Grid.Row="1" Grid.Column="1" StaysOpen="True" HorizontalAlignment="Right">
                    <materialDesign:PopupBox.ToggleContent>
                        <materialDesign:PackIcon Kind="Settings" Width="20" Height="20" />
                    </materialDesign:PopupBox.ToggleContent>
                    <Grid Width="150" Margin="8,8,8,8">
                        <Grid.Resources>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                <Setter Property="Margin" Value="8,8,10,8"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Grid.Row="0" Style="{StaticResource MaterialDesignTitleTextBlock}" Margin="8,8,8,16">Ajustes filtro</TextBlock>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="Razon social" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="NIF" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="3" Text="Email" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="4" Text="Calle" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="5" Text="Código Postal" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="6" Text="Población" Margin="8,8,8,8"/>
                        <CheckBox x:Name="cbRazonSocial" Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom" IsChecked="True"/>
                        <CheckBox x:Name="cbNif" Grid.Column="1" Grid.Row="2" VerticalAlignment="Bottom" IsChecked="True"/>
                        <CheckBox x:Name="cbEmail" Grid.Column="1" Grid.Row="3" VerticalAlignment="Bottom" IsChecked="True"/>
                        <CheckBox x:Name="cbCalle" Grid.Column="1" Grid.Row="4" VerticalAlignment="Bottom" IsChecked="True"/>
                        <CheckBox x:Name="cbCodigoPostal" Grid.Column="1" Grid.Row="5" VerticalAlignment="Bottom" />
                        <CheckBox x:Name="cbPoblacion" Grid.Column="1" Grid.Row="6" VerticalAlignment="Bottom" />
                    </Grid>

                </materialDesign:PopupBox>
            </Grid>

        </GroupBox>
    </Grid>
</UserControl>
