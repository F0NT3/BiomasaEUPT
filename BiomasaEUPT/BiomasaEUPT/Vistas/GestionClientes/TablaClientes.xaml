<UserControl x:Class="BiomasaEUPT.Vistas.GestionClientes.TablaClientes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BiomasaEUPT.Vistas.GestionClientes"
             xmlns:raiz="clr-namespace:BiomasaEUPT.Vistas"
             xmlns:BiomasaEUPT="clr-namespace:BiomasaEUPT"
             xmlns:Tablas="clr-namespace:BiomasaEUPT.Modelos.Tablas"
             xmlns:const="clr-namespace:BiomasaEUPT.Modelos"
             xmlns:ControlesUsuario="clr-namespace:BiomasaEUPT.Vistas.ControlesUsuario"
             xmlns:domain="clr-namespace:BiomasaEUPT.Domain"
             xmlns:validadores="clr-namespace:BiomasaEUPT.Modelos.Validadores"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="850" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <domain:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInvertido" True="Collapsed" False="Visible" />
            <domain:PaisISOA2NombreCompletoConverter x:Key="PaisISOA2NombreCompletoConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <GroupBox materialDesign:ColorZoneAssist.Mode="PrimaryMid" Header="Clientes">

            <Grid Margin="0 0 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <DataGrid Grid.Row="0" Grid.RowSpan="2" x:Name="dgClientes"
                              AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding ClientesView}"
                              RowDetailsVisibilityMode="VisibleWhenSelected" HeadersVisibility="All" CanUserAddRows="False"
                              CanUserDeleteRows="False" SelectedItem="{Binding ClienteSeleccionado, Mode=TwoWay}" IsSynchronizedWithCurrentItem="True"
                              ColumnHeaderStyle="{DynamicResource MaterialDesignDataGridColumnHeader}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding DGClientes_SelectionChangedComando}"
                                    CommandParameter="{Binding Path=SelectedItems, ElementName=dgClientes}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="CellEditEnding">
                                <cmd:EventToCommand Command="{Binding DGClientes_CellEditEndingComando, Mode=OneWay}"
                                                    PassEventArgsToCommand="True"/>
                                <!--domain:EventCommandExecuter Command="{Binding DGClientes_CellEditEndingComando}"/-->
                            </i:EventTrigger>
                            <i:EventTrigger EventName="RowEditEnding">
                                <cmd:EventToCommand Command="{Binding DGClientes_RowEditEndingComando, Mode=OneWay}"
                                                    PassEventArgsToCommand="True"/>
                                <!--domain:EventCommandExecuter Command="{Binding DGClientes_RowEditEndingComando}"/-->
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.InputBindings>
                            <KeyBinding Gesture="Delete" Key="Delete"
                                        Command="{Binding BorrarComando}"
                                        CommandParameter="{Binding Path=SelectedItems, ElementName=dgClientes, Mode=OneWay}"/>
                        </DataGrid.InputBindings>
                        <DataGrid.RowValidationErrorTemplate>
                            <ControlTemplate>
                                <Grid Margin="2,-2"
                                      ToolTip="{Binding RelativeSource={RelativeSource
                                      FindAncestor, AncestorType={x:Type DataGridRow}},
                                      Path=(Validation.Errors)[0].ErrorContent}">
                                    <Ellipse StrokeThickness="0" Fill="Red" Width="20" Height="20"/>
                                    <TextBlock Text="!" FontSize="18" 
                                               FontWeight="Bold" Foreground="White" 
                                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                                <!--Label Foreground="Red"
                                       ToolTip="{Binding RelativeSource={RelativeSource
                                      FindAncestor, AncestorType={x:Type DataGridRow}},
                                      Path=(Validation.Errors)[0].ErrorContent}">
                                    <materialDesign:PackIcon Kind="Exclamation" Height="21" Width="21" />
                                </-->
                            </ControlTemplate>
                        </DataGrid.RowValidationErrorTemplate>

                        <DataGrid.RowValidationRules>
                            <!--validadores:ClienteValidationRule ValidationStep="UpdatedValue"/-->
                        </DataGrid.RowValidationRules>

                        <DataGrid.Columns>
                            <materialDesign:MaterialDataGridTextColumn x:Name="razonSocialColumna" Header="Razón Social" Width="SizeToHeader"
                                                                       Binding="{Binding RazonSocial, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                                                       EditingElementStyle="{DynamicResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                                <!--materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="RazonSocial" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="razón social" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="razón social" Min="5" Max="100" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="^(?!\s)(?!.*\s$)[\p{L}0-9\s'~?!\.,@]+$" Mensaje="El campo razón social no tiene formato válido." ValidatesOnTargetUpdated="True" />
                                            <validadores:UnicoValidationRule Coleccion="{StaticResource clientesViewSource}" Tipo="clientes" Atributo="razon_social"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding-->
                            </materialDesign:MaterialDataGridTextColumn>
                            <materialDesign:MaterialDataGridTextColumn x:Name="nifColumna" Header="NIF"
                                                                       Binding="{Binding Nif, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                                                       EditingElementStyle="{DynamicResource MaterialDesignDataGridTextColumnEditingStyle}" >
                                <!--materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="Nif" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="NIF" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="NIF" Min="9" Max="9" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="^([A-Z]-\d{7})|(\d{7}-[A-Z])$" Mensaje="El campo NIF no tiene un formato válido (L-NNNNNNN o NNNNNNN-L)" ValidatesOnTargetUpdated="True" />
                                            <validadores:UnicoValidationRule Coleccion="{StaticResource clientesViewSource}" Tipo="clientes" Atributo="nif"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding-->
                            </materialDesign:MaterialDataGridTextColumn>
                            <materialDesign:MaterialDataGridTextColumn x:Name="emailColumna" Header="Email"
                                                                       Binding="{Binding Email, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                                                       EditingElementStyle="{DynamicResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                                       MaxLength="254">
                                <!--materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="Email" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="email" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="email" Min="10" Max="254" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="^[a-zA-Z][\w\.-]*[a-zA-Z0-9]@[a-zA-Z0-9][\w\.-]*[a-zA-Z0-9]\.[a-zA-Z][a-zA-Z\.]*[a-zA-Z]$" Mensaje="El campo email no tiene formato válido." ValidatesOnTargetUpdated="True" />
                                            <validadores:UnicoValidationRule Coleccion="{StaticResource clientesViewSource}" Tipo="clientes" Atributo="email"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding-->
                            </materialDesign:MaterialDataGridTextColumn>

                            <DataGridTemplateColumn Header="Tipo" x:Name="tipoClienteColumna" >
                                <DataGridTemplateColumn.CellEditingTemplate >
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding TipoCliente, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                  DisplayMemberPath="Nombre"
                                                  ItemsSource="{Binding DataContext.TiposClientes, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:TabClientes}}">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding TipoCliente.Nombre, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Grupo" x:Name="grupoClienteColumna" >
                                <DataGridTemplateColumn.CellEditingTemplate >
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding GrupoCliente, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                  DisplayMemberPath="Nombre"
                                                  ItemsSource="{Binding DataContext.GruposClientes, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:TabClientes}}">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding GrupoCliente.Nombre, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <!--DataGridComboBoxColumn x:Name="tiposClientesColumna" Header="Tipo"
                                                ItemsSource="{Binding Source={StaticResource tiposClientesViewSource}}"
                                                SelectedValuePath="TipoClienteId" 
                                                DisplayMemberPath="Nombre" SelectedValueBinding="{Binding TipoId, UpdateSourceTrigger=PropertyChanged}"
                                                EditingElementStyle="{DynamicResource MaterialDesignComboBox}" />
                            <DataGridComboBoxColumn x:Name="gruposClientesColumna" Header="Grupo"
                                                ItemsSource="{Binding Source={StaticResource gruposClientesViewSource}}"
                                                SelectedValuePath="GrupoClienteId" 
                                                DisplayMemberPath="Nombre" SelectedValueBinding="{Binding GrupoId, UpdateSourceTrigger=PropertyChanged}"
                                                EditingElementStyle="{DynamicResource MaterialDesignComboBox}" /-->

                            <materialDesign:MaterialDataGridTextColumn x:Name="calleColumn" Header="Calle"
                                                                       Binding="{Binding Calle, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                                                       EditingElementStyle="{DynamicResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                                <!--materialDesign:MaterialDataGridTextColumn.Binding>
                                    <Binding Path="calle" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validadores:RequeridoValidationRule NombreCampo="calle" ValidatesOnTargetUpdated="True" />
                                            <validadores:LongitudValidationRule NombreCampo="calle" Min="20" Max="100" ValidatesOnTargetUpdated="True" />
                                            <validadores:RegexValidationRule ExpReg="^(?!\s)(?!.*\s$)[\p{L}0-9\s'~?!\.,\/]+$" Mensaje="El campo calle no tiene formato válido." ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:MaterialDataGridTextColumn.Binding-->
                            </materialDesign:MaterialDataGridTextColumn>

                            <DataGridTemplateColumn x:Name="direccionColumn" Header="Dirección">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0} {1} ({2}), {3} - {4}">
                                                    <Binding Path="Municipio.CodigoPostal"/>
                                                    <Binding Path="Municipio.Nombre"/>
                                                    <Binding Path="Municipio.Provincia.Nombre"/>
                                                    <Binding Path="Municipio.Provincia.Comunidad.Nombre"/>
                                                    <Binding Path="Municipio.Provincia.Comunidad.Pais.Codigo" Converter="{StaticResource PaisISOA2NombreCompletoConverter}"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ControlesUsuario:FormDireccion />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <!--DataGridTemplateColumn x:Name="direccionColumn" Header="Dirección">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:PopupBox x:Name="pbDireccion" Grid.Row="1" Grid.Column="1"
                                                                 StaysOpen="True" Opened="pbDireccion_Opened">
                                            <materialDesign:PopupBox.ToggleContent>
                                                <TextBlock>
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="{}{0} {1} ({2}), {3} - {4}">
                                                            <Binding Path="Municipio.CodigoPostal"/>
                                                            <Binding Path="Municipio.Nombre"/>
                                                            <Binding Path="Municipio.Provincia.Nombre"/>
                                                            <Binding Path="Municipio.Provincia.Comunidad.Nombre"/>
                                                            <Binding Path="Municipio.Provincia.Comunidad.Pais.Codigo" Converter="{StaticResource PaisISOA2NombreCompletoConverter}"/>
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </materialDesign:PopupBox.ToggleContent>
                                        </materialDesign:PopupBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn-->
                        </DataGrid.Columns>
                    </DataGrid>

                    <materialDesign:PopupBox Grid.Row="1" Style="{DynamicResource MaterialDesignMultiFloatingActionPopupBox}"
                                 HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                 PlacementMode="RightAndAlignMiddles"
                                 UnfurlOrientation="Horizontal"
                                 ToolTip="Gestionar clientes"
                                 Margin="15 15 15 30" Width="40" Height="40">
                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="bAnadirCliente" ToolTip="Añadir cliente" Command="{Binding AnadirComando}">
                                <materialDesign:PackIcon Kind="AccountPlus" Height="20" Width="20" />
                            </Button>
                            <Button ToolTip="Borrar el cliente seleccionado" Command="{Binding BorrarComando}">
                                <materialDesign:PackIcon Kind="Delete" Height="20" Width="20" />
                            </Button>
                            <Button ToolTip="Modificar el cliente seleccionado" Command="{Binding ModificarComando}">
                                <materialDesign:PackIcon Kind="Pencil" Height="20" Width="20" />
                            </Button>
                            <Button x:Name="bRefrescar" ToolTip="Refrescar clientes">
                                <materialDesign:PackIcon Kind="Refresh" Height="20" Width="20" />
                            </Button>
                        </StackPanel>
                    </materialDesign:PopupBox>
                </Grid>

                <StackPanel Grid.Column="1" 
                            HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Stretch"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}">
                    <Expander ExpandDirection="Left">
                        <Expander.Header>
                            <TextBlock Text="Observaciones" RenderTransformOrigin=".5,.5" FontSize="16">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Orientation="Vertical" Width="150" Margin="8,24,8,24"
                                    TextBlock.Foreground="{DynamicResource MaterialDesignBody}">
                            <ToggleButton x:Name="tbEditarObservaciones" HorizontalAlignment="Right" IsChecked="{Binding ObservacionesEnEdicion, Mode=TwoWay}"
                                          Margin="8 0 0 0" ToolTip="Editar">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=dgClientes, Path=SelectedItems.Count}" Value="1">
                                                <Setter Property="IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                                <materialDesign:PackIcon Kind="Pin" RenderTransformOrigin=".5,.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform Angle="45" />
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <materialDesign:PackIcon Kind="Pin"/>
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                            <TextBlock x:Name="tbObservaciones" Text="{Binding ClienteSeleccionado.Observaciones, UpdateSourceTrigger=PropertyChanged}"
                                       Visibility="{Binding IsChecked, ElementName=tbEditarObservaciones, Converter={StaticResource BooleanToVisibilityConverterInvertido}}"
                                       FontSize="16" MaxHeight="260" TextWrapping="Wrap"/>
                            <TextBox x:Name="tboxObservaciones" Text="{Binding ClienteSeleccionado.Observaciones, UpdateSourceTrigger=PropertyChanged}"
                                     Visibility="{Binding IsChecked, ElementName=tbEditarObservaciones, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     FontSize="16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"
                                     MaxHeight="260" TextWrapping="Wrap" Foreground="{DynamicResource MaterialDesignBody}"
                                     MaxLength="{x:Static const:Constantes.LONG_MAX_OBSERVACIONES}"/>
                            <Button x:Name="bEditarObservaciones" Margin="0 20 0 0" Content="Modificar" Command="{Binding ModificarObservacionesComando}"
                                     Visibility="{Binding IsChecked, ElementName=tbEditarObservaciones, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </StackPanel>
                    </Expander>
                </StackPanel>

                <TextBox x:Name="tbBuscar" Grid.Row="1" Grid.ColumnSpan="2" FontFamily="Roboto" FontSize="12"
                         materialDesign:HintAssist.Hint=" Buscar..." Background="{DynamicResource MaterialDesignPaper}"
                         TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                         Text="{Binding TextoFiltroClientes, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                <materialDesign:PopupBox Grid.Row="1" Grid.Column="1" StaysOpen="True" HorizontalAlignment="Right">
                    <materialDesign:PopupBox.ToggleContent>
                        <materialDesign:PackIcon Kind="Settings" Width="20" Height="20" />
                    </materialDesign:PopupBox.ToggleContent>
                    <Grid Width="150" Margin="8,8,8,8">
                        <Grid.Resources>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                <Setter Property="Margin" Value="8,8,10,8"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Grid.Row="0" Style="{DynamicResource MaterialDesignTitleTextBlock}" Margin="8,8,8,16">Ajustes filtro</TextBlock>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="Razon Social" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="NIF" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="3" Text="Email" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="4" Text="Calle" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="5" Text="Código Postal" Margin="8,8,8,8"/>
                        <TextBlock Grid.Column="0" Grid.Row="6" Text="Municipio" Margin="8,8,8,8"/>
                        <CheckBox x:Name="cbRazonSocial" Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom"
                                  IsChecked="{Binding RazonSocialSeleccionada}" Command="{Binding FiltrarClientesComando}"/>
                        <CheckBox x:Name="cbNif" Grid.Column="1" Grid.Row="2" VerticalAlignment="Bottom"
                                  IsChecked="{Binding NifSeleccionado}" Command="{Binding FiltrarClientesComando}"/>
                        <CheckBox x:Name="cbEmail" Grid.Column="1" Grid.Row="3" VerticalAlignment="Bottom"
                                  IsChecked="{Binding EmailSeleccionado}" Command="{Binding FiltrarClientesComando}"/>
                        <CheckBox x:Name="cbCalle" Grid.Column="1" Grid.Row="4" VerticalAlignment="Bottom"
                                  IsChecked="{Binding CalleSeleccionada}" Command="{Binding FiltrarClientesComando}"/>
                        <CheckBox x:Name="cbCodigoPostal" Grid.Column="1" Grid.Row="5" VerticalAlignment="Bottom"
                                  IsChecked="{Binding CodigoPostalSeleccionado}" Command="{Binding FiltrarClientesComando}"/>
                        <CheckBox x:Name="cbMunicipio" Grid.Column="1" Grid.Row="6" VerticalAlignment="Bottom"
                                  IsChecked="{Binding MunicipioSeleccionado}" Command="{Binding FiltrarClientesComando}"/>
                    </Grid>

                </materialDesign:PopupBox>
            </Grid>

        </GroupBox>
    </Grid>
</UserControl>
