<UserControl x:Class="BiomasaEUPT.Vistas.GestionVentas.FormPedido"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BiomasaEUPT.Vistas.GestionVentas"
             xmlns:BiomasaEUPT="clr-namespace:BiomasaEUPT"
             xmlns:Tablas="clr-namespace:BiomasaEUPT.Modelos.Tablas"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:validadores="clr-namespace:BiomasaEUPT.Modelos.Validadores"
             xmlns:domain="clr-namespace:BiomasaEUPT.Domain"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             Height="350" Width="450" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Diccionarios/DiccionarioForm.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <CollectionViewSource x:Key="pedidosViewSource" d:DesignSource="{d:DesignInstance {x:Type Tablas:PedidoCabecera}, CreateList=True}"/>
            <CollectionViewSource x:Key="clientesViewSource" d:DesignSource="{d:DesignInstance {x:Type Tablas:Cliente}, CreateList=True}"/>
            <CollectionViewSource x:Key="estadosPedidosViewSource" d:DesignSource="{d:DesignInstance {x:Type Tablas:EstadoPedido}, CreateList=True}"/>
            <CollectionViewSource x:Key="productosTerminadosComposicionesViewSource" d:DesignSource="{d:DesignInstance {x:Type Tablas:ProductoTerminadoComposicion}, CreateList=True}"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <GroupBox x:Name="gbTitulo" materialDesign:ColorZoneAssist.Mode="PrimaryMid" Header="Nuevo Pedido">
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                    <DatePicker x:Name="dpFechaPedido" Width="100" VerticalAlignment="Center"
                                SelectedDate="{x:Static system:DateTime.Now}"            
                                materialDesign:HintAssist.Hint="Fecha ped">
                        <DatePicker.BlackoutDates>
                            <CalendarDateRange Start="01/01/0001" End="01/01/2016"/>
                            <CalendarDateRange Start="01/01/2019" End="12/31/9999"/>
                        </DatePicker.BlackoutDates>
                        <DatePicker.Text>
                            <Binding Path="FechaPedido" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validadores:FechaValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </DatePicker.Text>
                    </DatePicker>

                    <materialDesign:TimePicker x:Name="tpHoraPedido" Grid.Row="1" Grid.Column="3" Width="60"
                                   materialDesign:HintAssist.Hint="Hora"
                                   IsInvalidTextAllowed="True" SelectedTime="{x:Static system:DateTime.Now}"
                                   Is24Hours="True" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <materialDesign:TimePicker.Text>
                            <Binding Path="HoraPedido" StringFormat="t" ConverterCulture="es-ES" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validadores:FechaValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </materialDesign:TimePicker.Text>
                    </materialDesign:TimePicker>
                </StackPanel>

                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <DatePicker x:Name="dpFechaFinalizacion" Width="100" VerticalAlignment="Center"
                                SelectedDate="{x:Static system:DateTime.Now}"            
                                materialDesign:HintAssist.Hint="Fecha">
                        <DatePicker.BlackoutDates>
                            <CalendarDateRange Start="01/01/0001" End="01/01/2016"/>
                            <CalendarDateRange Start="01/01/2019" End="12/31/9999"/>
                        </DatePicker.BlackoutDates>
                        <DatePicker.Text>
                            <Binding Path="FechaFinalizacion" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validadores:FechaValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </DatePicker.Text>
                    </DatePicker>

                    <materialDesign:TimePicker x:Name="tpHoraFinalizacion" Grid.Row="1" Grid.Column="3" Width="60"
                                   materialDesign:HintAssist.Hint="Hora"
                                   IsInvalidTextAllowed="True" SelectedTime="{x:Static system:DateTime.Now}"
                                   Is24Hours="True" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <materialDesign:TimePicker.Text>
                            <Binding Path="Hora" StringFormat="t" ConverterCulture="es-ES" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validadores:FechaValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </materialDesign:TimePicker.Text>
                    </materialDesign:TimePicker>
                </StackPanel>

                <ComboBox Grid.Row="1" Grid.Column="0" x:Name="cbClientes" materialDesign:HintAssist.Hint="Cliente"
                          ItemsSource="{Binding Source={StaticResource clientesViewSource}}"
                          DisplayMemberPath="RazonSocial"
                          SelectedValuePath="ClienteId" >
                </ComboBox>

                <Button Grid.Row="1" Grid.Column="1"
                    x:Name="bAnadirPTerminadoCantidad"
                    Content="+"
                    HorizontalAlignment="Left"
                    Margin="88,26,0,15"
                    VerticalAlignment="Center"
                    Width="40"
                    Click="AnadirProductoCantidad" />

                <materialDesign:ColorZone Grid.Row="2" Grid.ColumnSpan="2" Mode="Standard"
                                          MinHeight="40" Width="380" Margin="10 10 10 0" CornerRadius="10"
                                          AllowDrop="True" Drop="spProductosEnvasadosComposiciones_Drop">
                    <WrapPanel x:Name="wpProductosEnvasadosComposiciones" Margin="10"
                               Orientation="Horizontal" HorizontalAlignment="Stretch"                            
                               ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding ProductosEnvasados, UpdateSourceTrigger=PropertyChanged}" Margin="10">
                            <ItemsControl.Style>
                                <Style TargetType="ItemsControl">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <TextBlock TextWrapping="Wrap" FontStyle="Italic" FontSize="14"
                                                               Text="Por favor, pulse el botón ⊕ para añadir un producto terminado a envasar"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.Style>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <materialDesign:Chip IsDeletable="True" Margin="5" DeleteToolTip="Eliminar materia prima"
                                                     CommandParameter="{Binding ProductoTerminado.ProductoTerminadoId}"
                                                     DeleteClick="cProductoEnvasadoComposicion_DeleteClick" Height="70">
                                        <materialDesign:Chip.Content>
                                            <StackPanel>
                                                <TextBlock FontSize="14" FontWeight="Bold" Margin="10 10 10 0"
                                                       Text="{Binding ProductoTerminado.TipoProductoTerminado.Nombre}"/>
                                                <TextBox>
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                                                            <Setter Property="Margin" Value="10 0 10 10" />
                                                            <Setter Property="FontSize" Value="15" />
                                                            <Setter Property="materialDesign:HintAssist.Hint" Value="Volumen"/>
                                                            <Setter Property="Text">
                                                                <Setter.Value>
                                                                    <Binding Path="Volumen" UpdateSourceTrigger="PropertyChanged">
                                                                        <Binding.ValidationRules>
                                                                            <validadores:RequeridoValidationRule NombreCampo="volumen" ValidatesOnTargetUpdated="True" />
                                                                            <validadores:LongitudValidationRule NombreCampo="volumen" Min="1" Max="6" ValidatesOnTargetUpdated="True" />
                                                                            <validadores:RegexValidationRule NombreCampo="volumen" ExpReg="^\d+(\.\d+)?$" ValidatesOnTargetUpdated="True" />
                                                                        </Binding.ValidationRules>
                                                                    </Binding>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ProductoTerminado.TipoProductoTerminado.MedidoEnUnidades}" Value="True">
                                                                    <Setter Property="materialDesign:HintAssist.Hint" Value="Unidades"/>
                                                                    <Setter Property="Text">
                                                                        <Setter.Value>
                                                                            <Binding Path="Unidades" UpdateSourceTrigger="PropertyChanged">
                                                                                <Binding.ValidationRules>
                                                                                    <validadores:RequeridoValidationRule NombreCampo="unidades" ValidatesOnTargetUpdated="True" />
                                                                                    <validadores:LongitudValidationRule NombreCampo="unidades" Min="1" Max="3" ValidatesOnTargetUpdated="True" />
                                                                                    <validadores:RegexValidationRule NombreCampo="unidades" ExpReg="^\d+$" ValidatesOnTargetUpdated="True" />
                                                                                </Binding.ValidationRules>
                                                                            </Binding>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ProductoTerminado.TipoProductoTerminado.MedidoEnVolumen}" Value="True">
                                                                    <Setter Property="materialDesign:HintAssist.Hint" Value="Unidades"/>
                                                                    <Setter Property="Text">
                                                                        <Setter.Value>
                                                                            <Binding Path="Unidades" UpdateSourceTrigger="PropertyChanged">
                                                                                <Binding.ValidationRules>
                                                                                    <validadores:RequeridoValidationRule NombreCampo="volumen" ValidatesOnTargetUpdated="True" />
                                                                                    <validadores:LongitudValidationRule NombreCampo="volumen" Min="1" Max="3" ValidatesOnTargetUpdated="True" />
                                                                                    <validadores:RegexValidationRule NombreCampo="volumen" ExpReg="^\d+$" ValidatesOnTargetUpdated="True" />
                                                                                </Binding.ValidationRules>
                                                                            </Binding>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </StackPanel>
                                        </materialDesign:Chip.Content>
                                        <materialDesign:Chip.Icon>
                                            <TextBlock FontSize="15" Text="{Binding ProductoTerminado.TipoProductoTerminado.Nombre}"/>
                                        </materialDesign:Chip.Icon>
                                    </materialDesign:Chip>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </WrapPanel>
                </materialDesign:ColorZone>

                <WrapPanel Grid.Row="4" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="0,15,0,0">
                    <Button x:Name="bNuevoPedido" IsDefault="True" Margin="0 8 8 0" Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=dpFechaPedido, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tpHoraPedido, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=dpFechaFinalizacion, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tpHoraFinalizacion, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=cbCliente, Path=(Validation.HasError)}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </Button.CommandParameter>
                        _ACEPTAR
                    </Button>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}"
                    IsCancel="True" Margin="0 8 8 0"
                    Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.CommandParameter>
                            <system:Boolean>False</system:Boolean>
                        </Button.CommandParameter>
                        _CANCELAR
                    </Button>
                </WrapPanel>
            </Grid>
        </ScrollViewer>
    </GroupBox>
</UserControl>
