<UserControl x:Class="BiomasaEUPT.Vistas.GestionVentas.FormProductoEnvasado"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BiomasaEUPT.Vistas.GestionVentas"
             xmlns:BiomasaEUPT="clr-namespace:BiomasaEUPT"
             xmlns:Tablas="clr-namespace:BiomasaEUPT.Modelos.Tablas"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:validadores="clr-namespace:BiomasaEUPT.Modelos.Validadores"
             xmlns:domain="clr-namespace:BiomasaEUPT.Domain"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             Height="400" Width="410" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Diccionarios/DiccionarioForm.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <CollectionViewSource x:Key="productosEnvasadosViewSource" d:DesignSource="{d:DesignInstance {x:Type Tablas:ProductoEnvasado}, CreateList=True}"/>
            <CollectionViewSource x:Key="tiposProductosTerminadosViewSource" d:DesignSource="{d:DesignInstance {x:Type Tablas:TipoProductoTerminado}, CreateList=True}"/>
            <CollectionViewSource x:Key="pickingViewSource" d:DesignSource="{d:DesignInstance {x:Type Tablas:Picking}, CreateList=True}"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <GroupBox x:Name="gbTitulo" materialDesign:ColorZoneAssist.Mode="PrimaryMid" Header="Producto Envasado">
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Row="0" Grid.Column="0" x:Name="tbNombre" materialDesign:HintAssist.Hint="Nombre" MaxLength="40">
                    <TextBox.Text>
                        <Binding Path="Nombre" UpdateSourceTrigger="PropertyChanged">

                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <DatePicker x:Name="dpFechaBaja" Width="100" VerticalAlignment="Center"
                                SelectedDate="{x:Static system:DateTime.Now}"            
                                materialDesign:HintAssist.Hint="Fecha baja">
                        <DatePicker.BlackoutDates>
                            <CalendarDateRange Start="01/01/0001" End="01/01/2016"/>
                            <CalendarDateRange Start="01/01/2019" End="12/31/9999"/>
                        </DatePicker.BlackoutDates>
                        <DatePicker.Text>
                            <Binding Path="Fecha" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validadores:FechaValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </DatePicker.Text>
                    </DatePicker>

                    <materialDesign:TimePicker x:Name="tpHoraBaja" Grid.Row="1" Grid.Column="3" Width="60"
                                   materialDesign:HintAssist.Hint="Hora"
                                   IsInvalidTextAllowed="True" SelectedTime="{x:Static system:DateTime.Now}"
                                   Is24Hours="True" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <materialDesign:TimePicker.Text>
                            <Binding Path="Hora" StringFormat="t" ConverterCulture="es-ES" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validadores:FechaValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </materialDesign:TimePicker.Text>
                    </materialDesign:TimePicker>
                </StackPanel>

                

                <ComboBox Grid.Row="2" Grid.Column="0" x:Name="cbTipoProductoTerminado" materialDesign:HintAssist.Hint="Tipo Producto Terminado"
                          ItemsSource="{Binding Source={StaticResource tiposProductosTerminadosViewSource}}"
                          DisplayMemberPath="Nombre"
                          SelectedValuePath="TipoProductoTerminadoId">
                </ComboBox>

                <ComboBox Grid.Row="2" Grid.Column="1" x:Name="cbPicking" materialDesign:HintAssist.Hint="Picking"
                          ItemsSource="{Binding Source={StaticResource pickingViewSource}}"
                          DisplayMemberPath="Nombre"
                          SelectedValuePath="PickingId" >
                </ComboBox>

                <StackPanel Grid.Row="3" Grid.Column="0">
                    <TextBox x:Name="tbVolumen" materialDesign:HintAssist.Hint="Volumen (m³)" MaxLength="6">
                        <TextBox.Text>
                            <Binding Path="Volumen" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validadores:RequeridoValidationRule NombreCampo="volumen" ValidatesOnTargetUpdated="True" />
                                    <validadores:LongitudValidationRule NombreCampo="volumen" Min="1" Max="6" ValidatesOnTargetUpdated="True" />
                                    <validadores:RegexValidationRule NombreCampo="volumen" ExpReg="^\d+(\.\d+)?$" ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                                <Setter Property="Margin" Value="10" />
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=cbTiposMateriasPrimas, Path=SelectedItem.MedidoEnUnidades}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>

                <TextBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" x:Name="tbObservaciones" materialDesign:HintAssist.Hint="Observaciones"
                         ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"
                         AcceptsReturn="True" Height="55" MaxLength="60">
                    <TextBox.Text>
                        <Binding Path="Observaciones" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validadores:LongitudValidationRule NombreCampo="observaciones" Max="60" ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <WrapPanel Grid.Row="5" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="0,15,0,0">
                    <Button x:Name="bNuevoProductoEnvasado" IsDefault="True" Margin="0 8 8 0" Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=tbNombre, Path=(Validation.HasError)}" Value="True" />
                                            <Condition Binding="{Binding ElementName=dpFechaBaja, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tpHoraBaja, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbVolumen, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=cbTipoProductoTerminado, Path=(Validation.HasError)}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </Button.CommandParameter>
                        _ACEPTAR
                    </Button>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}"
                    IsCancel="True" Margin="0 8 8 0"
                    Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.CommandParameter>
                            <system:Boolean>False</system:Boolean>
                        </Button.CommandParameter>
                        _CANCELAR
                    </Button>
                </WrapPanel>
            </Grid>
        </ScrollViewer>
    </GroupBox>
</UserControl>
