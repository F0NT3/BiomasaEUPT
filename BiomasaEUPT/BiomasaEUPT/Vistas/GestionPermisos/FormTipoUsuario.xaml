<UserControl x:Class="BiomasaEUPT.Vistas.GestionPermisos.FormTipoUsuario"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BiomasaEUPT.Vistas.GestionPermisos"
             xmlns:const="clr-namespace:BiomasaEUPT.Modelos"
             xmlns:BiomasaEUPT="clr-namespace:BiomasaEUPT"
             xmlns:Tablas="clr-namespace:BiomasaEUPT.Modelos.Tablas"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:validadores="clr-namespace:BiomasaEUPT.Modelos.Validadores"
             xmlns:conv="clr-namespace:BiomasaEUPT.Domain.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:FormTipoUsuarioViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Diccionarios/DiccionarioForm.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <conv:PorcentajeConverter x:Key="PorcentajeConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <GroupBox x:Name="gbTitulo" materialDesign:ColorZoneAssist.Mode="PrimaryMid"
              Header="{Binding Titulo, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
              MaxHeight="{Binding RelativeSource={RelativeSource FindAncestor,
                                  AncestorType={x:Type Window}},
                                  Path=ActualHeight, UpdateSourceTrigger=PropertyChanged,
                                  Converter={StaticResource PorcentajeConverter}, ConverterParameter=0.9}">
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Row="0" Grid.Column="0" x:Name="tbNombre" materialDesign:HintAssist.Hint="Nombre"
                         MaxLength="{x:Static const:Constantes.LONG_MAX_NOMBRE_TIPO_USUARIO}" VerticalAlignment="Top">
                    <TextBox.Text>
                        <Binding Path="Nombre" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validadores:RequeridoValidationRule NombreCampo="nombre" ValidatesOnTargetUpdated="True" />
                                <validadores:LongitudValidationRule NombreCampo="nombre" Min="{x:Static const:Constantes.LONG_MIN_NOMBRE_TIPO_USUARIO}" Max="{x:Static const:Constantes.LONG_MAX_NOMBRE_TIPO_USUARIO}" ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <ListBox Grid.Row="0" Grid.Column="1" x:Name="lbTabs" Height="100"
                         ItemsSource="{Binding TabsView, UpdateSourceTrigger=PropertyChanged}"
                         PreviewMouseLeftButtonDown="lbTabs_PreviewMouseLeftButtonDown">
                    <ItemsControl.Style>
                        <Style TargetType="ItemsControl">
                            <Style.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock TextWrapping="Wrap" FontStyle="Italic" FontSize="14" Margin="10" VerticalAlignment="Center"
                                                           Text="No hay más permisos disponibles"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Style>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock FontSize="14">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}Gestión de {0}">
                                            <Binding Path=""/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ListBox>

                <materialDesign:ColorZone Grid.Row="1" Grid.ColumnSpan="2" Mode="Standard"
                                          MinHeight="40" Width="380" Margin="10 10 10 0" CornerRadius="10"
                                          AllowDrop="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Drop">
                            <cmd:EventToCommand Command="{Binding WPPermisos_DropComando, Mode=OneWay}"
                                                    PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <WrapPanel x:Name="wpPermisos" Margin="10"
                               Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <ItemsControl x:Name="icPermisos" ItemsSource="{Binding Permisos, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" >
                            <ItemsControl.Style>
                                <Style TargetType="ItemsControl">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <TextBlock TextWrapping="Wrap" FontStyle="Italic" FontSize="14"
                                                                   Text="Por favor, arrastre los permisos que desee asignar al tipo de usuario."/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.Style>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <materialDesign:Chip IsDeletable="True"  Margin="5"
                                                         DeleteToolTip="Quitar permiso"
                                                         DeleteCommand="{Binding DataContext.QuitarPermisoComando,
                                                                           RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                         DeleteCommandParameter="{Binding Tab}">
                                        <materialDesign:Chip.Content>
                                            <TextBlock FontSize="14" FontStyle="Italic">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0}">
                                                        <Binding Path="Tab"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </materialDesign:Chip.Content>
                                    </materialDesign:Chip>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </WrapPanel>
                </materialDesign:ColorZone>
                <TextBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Name="tbDescripcion" materialDesign:HintAssist.Hint="Descripción"
                         ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"
                         AcceptsReturn="True" Height="55" MaxLength="{x:Static const:Constantes.LONG_MAX_DESCRIPCION}">
                    <TextBox.Text>
                        <Binding Path="Descripcion" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validadores:LongitudValidationRule NombreCampo="descripción" Min="{x:Static const:Constantes.LONG_MIN_DESCRIPCION}" Max="{x:Static const:Constantes.LONG_MAX_DESCRIPCION}" ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <WrapPanel Grid.Row="3" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="0,15,0,0">
                    <Button x:Name="bNuevoTipoUsuario" IsDefault="True" Margin="0 8 8 0" Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=icPermisos, Path=HasItems}" Value="True" />
                                            <Condition Binding="{Binding ElementName=tbNombre, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbDescripcion, Path=(Validation.HasError)}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </Button.CommandParameter>
                        _ACEPTAR
                    </Button>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}"
                            IsCancel="True" Margin="0 8 8 0"
                            Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.CommandParameter>
                            <system:Boolean>False</system:Boolean>
                        </Button.CommandParameter>
                        _CANCELAR
                    </Button>
                </WrapPanel>
            </Grid>
        </ScrollViewer>
    </GroupBox>
</UserControl>
